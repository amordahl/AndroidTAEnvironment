<flows><flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>both calls to setTheme use constants as defined in the R object.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Traced all dataflow back, none of it traces to a call to getText</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Two variables in this call; broadcast is a new Intent, and mPathReceiver is a new BroadcastReceiver</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>openHelp is a fresh intent</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>7 arguments to investigate</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>mTSConnection is a new variable that is not tainted</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink and determined it to not be tainted</justification></classification></flow>
        <flow generating_config="config_DroidSafe_11.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>A lot of dataflow to here</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>mProcId is a process id, which would not be tainted by read. Result is obtainted from TermExec</justification></classification></flow>
        <flow generating_config="config_DroidSafe_11.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this flow</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>path is from the system path</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_33(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_33(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_33(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>exception is thrown by android framework</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>NATIVE</result><justification>unknown, since code is in native call</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>o is a constant</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already checked this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Neither call to log E has any non-constant info</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>All calls to set are with only constant values</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r18.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>context</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>position is obtained from the android framework, and nothing else is used.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Everything written is from either system or process</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Exception thrown by system, not by application code</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r0.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: boolean isEventFromToggleDevice(android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>too many parameters</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>finish is a constant</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>context</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>no dataflow traces back to RemoteInterface</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>traced dataflow back, no leak</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already checked this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_11.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void notifyNewOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Constant parameter</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Too many parameters back</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Too many dataflows to study</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>context</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this flow</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>All calls to this method have constant arguments for button_code</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_11.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_61.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_61.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_72.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r7) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r7) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r7) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r7) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r7) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>MISSING</result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(13) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>13</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <classification>
	      <result>FALSE</result>
	      <justification>The main investigation is whether or not the message object is traced. Looking at the message object, by all places a message is sent with the tag TRIGGER_INC, the object can either be next or volume_starting. Next is determined from volume ending, or from the sum of m.obj and inc. Inc is a combination of a view of the volume controls, none of which are tainted from calendar. They can possibly be set by start and end in OptionsView.OptionsView, but these are determined by min and max which are not tainted.</justification>
	    </classification>
	</flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034139, $r19) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034139</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>There is no taint on start or on norm from getString</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <classification>
	      <result>FALSE</result>
	      <justification>Check taint on v. v is created with a constant and secondsPastMidnight, which as the flowdroid investigation yielded, is obtainted from the calendar. So, not tainted.</justification>
	    </classification>
	</flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Much like the similar flowdroid flow, alarmids is not tainted from gettext.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r50 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034138, $r48) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034138</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r48</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE (UNCERTAIN)</result><justification>I believe this is a false positive because, tracing back usages of until, it is used to setText in a view. However, that view seems to be created anew for both times bindView is called, and would not be the context returned by getApplicationContext in ActiveAlarms (which, as I understand, is the context for the entire application so wouldn't have any of the tatined data that's in the view?</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Alarmids should be tainted from getLong or getLongExtra; not getText()</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmids is not tainted by getTimeInMillis(), but by getLongExtra</justification></classification></flow>
        <flow generating_config="config_DroidSafe_74.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void scheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE (UNCERTAIN)</result><justification>alarm times are modified by calendar, but not the ids</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r33 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034144, $r31) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034144</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r31</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034118, $r7) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034118</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Message is only sent with a constant</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034118, $r7) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034118</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Too many calls with too many fields</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result>contexts<justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmids not affected by get</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>same as previous, too many calls and params to investigate</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void clearSnooze(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>the only non-constant passed is val, which is created only from constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034118, $r7) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034118</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmids not affected by getString</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>already addressed</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>secondspastmidnight does not come from getText</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmids are not set with data from Calendar</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>as stated before</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmids are not tainted from getText()</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>as stated before</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE (UNCERTAIN)</result><justification>Exceptions are not tainted by getText(), these are all exceptions thrown by the android API</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(11) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>11</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Too many layered calls to nextoccurrence</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(13) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>13</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>start is not tainted by anything from calendar; it is the volume control</justification></classification></flow>
        <flow generating_config="config_DroidSafe_74.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>The time to getTimeInMillis() doesn't actually produce data. It's just used in the guard.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(11) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>11</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>u cannot be tainted since it is the id of a new row. alarmid is just that new id being parsed</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmid is not tainted by getText</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(11) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>11</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmid is not related to get()</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(11) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>11</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmids are not related to get</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>start is not tainted by getText. It is obtained through getInt</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r50 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034138, $r48) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034138</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r48</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmid is not tainted from getString</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated norm, determined that it is not tainted</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>All constants here</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmid is never obtained or modified from getText; getLong or getLongExtra is the culprit here</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void rescheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>alarmids are obtained from querying the content resovler in enabledalarms.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKONWN</result><justification>contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_40.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>contexts</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>the only thing printed here is the size of the alarmsid array, which is not tainted by get</justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>TAG is not tainted</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$5: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$5</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>which is not tainted, since it's a call from the android framework</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Exception is not thrown by application but rather by Thread.class</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$5: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$5</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Exception is not from application code</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>InterruptedException thrown by Android framework, not by application code</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>too many dataflows for volume</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>IOException thrown by android framework</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void stop(java.util.concurrent.CountDownLatch)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>name is a constant from SERVICE_NAME</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>exception from framework</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Only constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$ColliderThread: void run()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$ColliderThread</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>Depends on whether m_serviceIntent is tainted which would be determined by solving the last flow marked as unknown</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r22 = staticinvoke &lt;android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()&gt;() (text.method)</statementfull>
                    <statementgeneric>android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Tracing usages of m_serviceConnection, it looks like tainted data is never added to it. It is just created and then started.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>See previous</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>dependent on whether audioVolume is tainted</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>AudioVolume is written as a constant integer from getProgress</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Same as other exception flows, from framework</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>m_frameSize is not tainted, bytesready has a more complicated flow</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.SwitchButton: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jsl.wfwt.SwitchButton</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Only constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>see previous flow with this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Only constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r19.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>see previous</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>see previous</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,org.jsl.collider.Collider,android.net.nsd.NsdManager,java.lang.String,java.lang.String,org.jsl.wfwt.SessionManager,org.jsl.collider.TimerQueue,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Exception thrown from framework</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Everything is from the NsdServiceInfo system class</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>same as previous exceptions</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.SwitchButton: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jsl.wfwt.SwitchButton</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>All constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: boolean onUnbind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>m_serviceConnection is not tainted</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>IOException thrown from framework</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$5: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$5</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already determined m_serviceIntent is not tainted</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = virtualinvoke $r19.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already determined m_serviceConnection to be untainted</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>depends on other unknown flow</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>too many parameters</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Neither of these contain the deviceID. componentName is the name of a component; even if the data is tainted in the component this is just the name. bindRC is a boolean, again, not tainted from the deviceId.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void stop(java.util.concurrent.CountDownLatch)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>m_name is a constant: "Channel_00"</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: android.os.IBinder onBind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$ColliderThread: void run()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$ColliderThread</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>depends on whether autovolume is tainted from other unknown flow</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>m_serviceIntent already determined to not be tainted from previous study</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>previously justified</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,org.jsl.collider.Collider,android.net.nsd.NsdManager,java.lang.String,java.lang.String,org.jsl.wfwt.SessionManager,org.jsl.collider.TimerQueue,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>see previous exceptional flows</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.SwitchButton: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jsl.wfwt.SwitchButton</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>only constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <classification><result>FALSE</result><justification>like other exceptional flows</justification></classification></flow>
        <flow generating_config="config_DroidSafe_59.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>only constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>too many flows for bytesReady</justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: android.os.IBinder onBind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Only constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r1.&lt;android.view.MotionEvent: float getAxisValue(int)&gt;(15) (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: float getAxisValue(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r1.&lt;android.view.MotionEvent: float getAxisValue(int)&gt;(15) (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: float getAxisValue(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r5.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.SoundManager$SoundPoolContainer: void play(java.lang.String,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.SoundManager$SoundPoolContainer</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_66.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>position is from the android framework. queryResult is obtained from getting the index of the position</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>clip is created in the line above by a call to newPlainText, which takes number. Number is obtained from a call to logEntryAdapter.getPhoneNumber, which gets the data at the constant position determined by COLUMN_NUMBER.</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>order is read from getText in onItemLongClick, but openSpeedDialPreferenceDialog is not called from that method</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>previously investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r10.&lt;java.util.Locale: java.lang.String getCountry()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String getCountry()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>previously investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already explained this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>$r3 = virtualinvoke $r2.&lt;android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: boolean onLongClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already explained this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>$r3 = virtualinvoke $r2.&lt;android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: boolean onLongClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already explained this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already explained this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerPreferencesActivity: void onBackPressed()&gt;</method>
                <classname>ru.henridellal.dialer.DialerPreferencesActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>context</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_11.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerPreferencesActivity: void onBackPressed()&gt;</method>
                <classname>ru.henridellal.dialer.DialerPreferencesActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>UNKNOWN</result><justification>context</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r10.&lt;java.util.Locale: java.lang.String getCountry()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String getCountry()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investgated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_61.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.PickContactNumberActivity: void onBackPressed()&gt;</method>
                <classname>ru.henridellal.dialer.PickContactNumberActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>only constants</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r10.&lt;java.util.Locale: java.lang.String getCountry()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String getCountry()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>Already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_75.xml">
            <reference type="from">
                <statement>
                    <statementfull>$r3 = virtualinvoke $r2.&lt;android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: boolean onLongClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>previously investigated this flow</justification></classification></flow>
        <flow generating_config="config_DroidSafe_11.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerPreferencesActivity: void onBackPressed()&gt;</method>
                <classname>ru.henridellal.dialer.DialerPreferencesActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result>FALSE</result><justification>already investigated this sink</justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void onSensorChanged(android.hardware.SensorEvent)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(11) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>11</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.DebugInfo: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.DebugInfo</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(2) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void onSensorChanged(android.hardware.SensorEvent)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(2) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_13(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_13(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_13(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(11) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>11</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_15(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_15(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_15(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setSuPath(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034132, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034132</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034132, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034132</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(13) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>13</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(13) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>13</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034132, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034132</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_58.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setOutputDir(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementfull>
                    <statementgeneric>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int[]</type>
                            <value>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(13) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>13</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034132, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034132</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementfull>
                    <statementgeneric>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int[]</type>
                            <value>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(2) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034132, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034132</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(13) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>13</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setOutputDir(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void onSensorChanged(android.hardware.SensorEvent)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034132, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034132</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_44.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(2) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void onSensorChanged(android.hardware.SensorEvent)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;android.media.RingtoneManager: android.net.Uri getDefaultUri(int)&gt;(2) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.media.RingtoneManager: android.net.Uri getDefaultUri(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void notifyUser()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034132, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034132</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setSuPath(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(2) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;($r3, $r1) (provider)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r3</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r2.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r2.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;($r3, $r1) (provider)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r3</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;($r4) (renderscript)</statementfull>
                    <statementgeneric>android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r2.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getActionIndex()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getActionIndex()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;($r4) (renderscript)</statementfull>
                    <statementgeneric>android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getActionIndex()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getActionIndex()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;($r3, $r1) (provider)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r3</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;($r4) (renderscript)</statementfull>
                    <statementgeneric>android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;($r4) (renderscript)</statementfull>
                    <statementgeneric>android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getActionIndex()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getActionIndex()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getActionIndex()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getActionIndex()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_30.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;($r3, $r1) (provider)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r3</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_23.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_24.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r2.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r29 = virtualinvoke $r28.&lt;java.util.Locale: java.lang.String toString()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String toString()</statementgeneric>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r22 = virtualinvoke $r10.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity$1: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>org.tuxpaint.ConfigActivity$1</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r28 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_4()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_4()</statementgeneric>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r13.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034122, $r14) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034122</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r14</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Adapter.TodayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Adapter.TodayAdapter</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: void addExercise(android.view.View)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i11 = virtualinvoke $r3.&lt;java.util.Date: int getSeconds()&gt;() (util)</statementfull>
                    <statementgeneric>java.util.Date: int getSeconds()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;java.text.DateFormat: java.lang.String format(java.util.Date)&gt;($r3) (DATE_TIME)</statementfull>
                    <statementgeneric>java.text.DateFormat: java.lang.String format(java.util.Date)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.util.Date</type>
                            <value>$r3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Adapter.ExerciseAdapter: void &lt;init&gt;(android.content.Context,java.util.List)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Adapter.ExerciseAdapter</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r13.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034122, $r14) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034122</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r14</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Adapter.TodayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Adapter.TodayAdapter</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.util.Date: int getHours()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.util.Date: int getHours()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i11 = virtualinvoke $r3.&lt;java.util.Date: int getSeconds()&gt;() (util)</statementfull>
                    <statementgeneric>java.util.Date: int getSeconds()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r3.&lt;java.util.Date: int getMinutes()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.util.Date: int getMinutes()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.util.Date: int getHours()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.util.Date: int getHours()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;java.text.DateFormat: java.lang.String format(java.util.Date)&gt;($r3) (DATE_TIME)</statementfull>
                    <statementgeneric>java.text.DateFormat: java.lang.String format(java.util.Date)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.util.Date</type>
                            <value>$r3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Adapter.ExerciseAdapter: void &lt;init&gt;(android.content.Context,java.util.List)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Adapter.ExerciseAdapter</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r3.&lt;java.util.Date: int getMinutes()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.util.Date: int getMinutes()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: void addExercise(android.view.View)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r2.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;pt.isec.tp.am.Score: void onLoad_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>pt.isec.tp.am.Score</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.Writer: void write(java.lang.String)</statementfull>
                    <statementgeneric>java.io.Writer: void write(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.io.Writer: void write(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;pt.isec.tp.am.Score: void onSave(android.content.Context,java.lang.Integer)&gt;</method>
                <classname>pt.isec.tp.am.Score</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r2.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;pt.isec.tp.am.Score: void onLoad_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>pt.isec.tp.am.Score</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;pt.isec.tp.am.TP_AMActivity: void OnClickSettings(android.view.View)&gt;</method>
                <classname>pt.isec.tp.am.TP_AMActivity</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r2.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;pt.isec.tp.am.Score: void onLoad_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>pt.isec.tp.am.Score</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)</statementfull>
                    <statementgeneric>android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;pt.isec.tp.am.Help: void onCreate(android.os.Bundle)&gt;</method>
                <classname>pt.isec.tp.am.Help</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i23 = virtualinvoke $r5.&lt;java.io.InputStream: int read(byte[])&gt;($r6) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;java.lang.ProcessBuilder: java.lang.Process start()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;java.lang.ProcessBuilder: java.lang.Process start()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r212 = staticinvoke &lt;java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)&gt;("PATH") (lang)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"PATH"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r84 = virtualinvoke $r82.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r84 = virtualinvoke $r82.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r271 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory_ds_method_clone_6()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory_ds_method_clone_6()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i23 = virtualinvoke $r5.&lt;java.io.InputStream: int read(byte[])&gt;($r6) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r84 = virtualinvoke $r82.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;java.lang.ProcessBuilder: java.lang.Process start()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r199 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory_ds_method_clone_4()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory_ds_method_clone_4()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r212 = staticinvoke &lt;java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)&gt;("PATH") (lang)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"PATH"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i23 = virtualinvoke $r5.&lt;java.io.InputStream: int read(byte[])&gt;($r6) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_14.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r271 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory_ds_method_clone_6()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory_ds_method_clone_6()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$r212 = staticinvoke &lt;java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)&gt;("PATH") (lang)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"PATH"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        <flow generating_config="config_DroidSafe_8.xml">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r8.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;daniel_32.flexiblewallpaper.FlexibleWallpaperSettingsActivity: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>daniel_32.flexiblewallpaper.FlexibleWallpaperSettingsActivity</classname>
                <app>
                    <file>daniel_32.flexiblewallpaper_2.apk</file>
                    <hashes>
                        <hash type="MD5">a4f66e21cefac5c2051025c061e1e0dd</hash>
                        <hash type="SHA-1">1f62c43bdc45cfb32a32645055af19ca4a4ddf54</hash>
                        <hash type="SHA-256">e680c0a6b8ed7291a580def660228b2bf647ad7b5a807bdb8fcb4df4d9445227</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;daniel_32.flexiblewallpaper.FlexibleWallpaperSettingsActivity: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>daniel_32.flexiblewallpaper.FlexibleWallpaperSettingsActivity</classname>
                <app>
                    <file>daniel_32.flexiblewallpaper_2.apk</file>
                    <hashes>
                        <hash type="MD5">a4f66e21cefac5c2051025c061e1e0dd</hash>
                        <hash type="SHA-1">1f62c43bdc45cfb32a32645055af19ca4a4ddf54</hash>
                        <hash type="SHA-256">e680c0a6b8ed7291a580def660228b2bf647ad7b5a807bdb8fcb4df4d9445227</hash>
                    </hashes>
                </app>
            </reference>
        <classification><result> </result><justification> </justification></classification></flow>
        </flows>